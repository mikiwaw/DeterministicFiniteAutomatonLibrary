//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace METRO.SimpleGraph
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[60];
            _typeNameTable[0] = "GraphX.Controls.ZoomControl";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[2] = "GraphX.DelegateCommand`1<Object>";
            _typeNameTable[3] = "Object";
            _typeNameTable[4] = "Boolean";
            _typeNameTable[5] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[6] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[7] = "Double";
            _typeNameTable[8] = "Windows.Foundation.Rect";
            _typeNameTable[9] = "Windows.Foundation.Point";
            _typeNameTable[10] = "TimeSpan";
            _typeNameTable[11] = "System.ValueType";
            _typeNameTable[12] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[13] = "GraphX.ITrackableContent";
            _typeNameTable[14] = "GraphX.Controls.Zoom.ZCP";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.ContentPresenter";
            _typeNameTable[16] = "GraphX.Controls.ZoomViewModifierMode";
            _typeNameTable[17] = "System.Enum";
            _typeNameTable[18] = "GraphX.Controls.ZoomControlModes";
            _typeNameTable[19] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[20] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[21] = "METRO.SimpleGraph.GraphAreaExample";
            _typeNameTable[22] = "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>";
            _typeNameTable[23] = "GraphX.GraphAreaBase";
            _typeNameTable[24] = "Windows.UI.Xaml.Controls.Canvas";
            _typeNameTable[25] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[26] = "GraphX.IGXLogicCore`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>";
            _typeNameTable[27] = "GraphX.Controls.Models.IGraphControlFactory";
            _typeNameTable[28] = "GraphX.StateStorage`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>";
            _typeNameTable[29] = "System.Collections.Generic.IDictionary`2<METRO.SimpleGraph.DataEdge, GraphX.Controls.EdgeControl>";
            _typeNameTable[30] = "GraphX.Controls.EdgeControl";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[32] = "GraphX.EdgeDashStyle";
            _typeNameTable[33] = "GraphX.EdgeEventOptions";
            _typeNameTable[34] = "GraphX.Controls.VertexControl";
            _typeNameTable[35] = "METRO.SimpleGraph.DataEdge";
            _typeNameTable[36] = "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>";
            _typeNameTable[37] = "String";
            _typeNameTable[38] = "GraphX.PCL.Common.Enums.ProcessingOptionEnum";
            _typeNameTable[39] = "Int32";
            _typeNameTable[40] = "GraphX.Measure.Point[]";
            _typeNameTable[41] = "System.Array";
            _typeNameTable[42] = "GraphX.Measure.Point";
            _typeNameTable[43] = "METRO.SimpleGraph.DataVertex";
            _typeNameTable[44] = "GraphX.VertexBase";
            _typeNameTable[45] = "System.Collections.Generic.IDictionary`2<METRO.SimpleGraph.DataVertex, GraphX.Controls.VertexControl>";
            _typeNameTable[46] = "GraphX.VertexEventOptions";
            _typeNameTable[47] = "GraphX.VertexShape";
            _typeNameTable[48] = "GraphX.Animations.MoveAnimationBase";
            _typeNameTable[49] = "GraphX.Models.Interfaces.IOneWayControlAnimation";
            _typeNameTable[50] = "GraphX.Models.Interfaces.IBidirectionalControlAnimation";
            _typeNameTable[51] = "Windows.Foundation.Size";
            _typeNameTable[52] = "METRO.SimpleGraph.MainPage";
            _typeNameTable[53] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[54] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[55] = "GraphX.Controls.EdgeLabelControl";
            _typeNameTable[56] = "GraphX.Controls.VertexLabelControl";
            _typeNameTable[57] = "GraphX.Controls.VertexLabelPositionMode";
            _typeNameTable[58] = "GraphX.Controls.VertexLabelPositionSide";
            _typeNameTable[59] = "GraphX.Converters.VisibilityToBoolConverter";

            _typeTable = new global::System.Type[60];
            _typeTable[0] = typeof(global::GraphX.Controls.ZoomControl);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[2] = typeof(global::GraphX.DelegateCommand<global::System.Object>);
            _typeTable[3] = typeof(global::System.Object);
            _typeTable[4] = typeof(global::System.Boolean);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[7] = typeof(global::System.Double);
            _typeTable[8] = typeof(global::Windows.Foundation.Rect);
            _typeTable[9] = typeof(global::Windows.Foundation.Point);
            _typeTable[10] = typeof(global::System.TimeSpan);
            _typeTable[11] = typeof(global::System.ValueType);
            _typeTable[12] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[13] = typeof(global::GraphX.ITrackableContent);
            _typeTable[14] = typeof(global::GraphX.Controls.Zoom.ZCP);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.ContentPresenter);
            _typeTable[16] = typeof(global::GraphX.Controls.ZoomViewModifierMode);
            _typeTable[17] = typeof(global::System.Enum);
            _typeTable[18] = typeof(global::GraphX.Controls.ZoomControlModes);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[21] = typeof(global::METRO.SimpleGraph.GraphAreaExample);
            _typeTable[22] = typeof(global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>);
            _typeTable[23] = typeof(global::GraphX.GraphAreaBase);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.Controls.Canvas);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[26] = typeof(global::GraphX.IGXLogicCore<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>);
            _typeTable[27] = typeof(global::GraphX.Controls.Models.IGraphControlFactory);
            _typeTable[28] = typeof(global::GraphX.StateStorage<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>);
            _typeTable[29] = typeof(global::System.Collections.Generic.IDictionary<global::METRO.SimpleGraph.DataEdge, global::GraphX.Controls.EdgeControl>);
            _typeTable[30] = typeof(global::GraphX.Controls.EdgeControl);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[32] = typeof(global::GraphX.EdgeDashStyle);
            _typeTable[33] = typeof(global::GraphX.EdgeEventOptions);
            _typeTable[34] = typeof(global::GraphX.Controls.VertexControl);
            _typeTable[35] = typeof(global::METRO.SimpleGraph.DataEdge);
            _typeTable[36] = typeof(global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>);
            _typeTable[37] = typeof(global::System.String);
            _typeTable[38] = typeof(global::GraphX.PCL.Common.Enums.ProcessingOptionEnum);
            _typeTable[39] = typeof(global::System.Int32);
            _typeTable[40] = typeof(global::GraphX.Measure.Point[]);
            _typeTable[41] = typeof(global::System.Array);
            _typeTable[42] = typeof(global::GraphX.Measure.Point);
            _typeTable[43] = typeof(global::METRO.SimpleGraph.DataVertex);
            _typeTable[44] = typeof(global::GraphX.VertexBase);
            _typeTable[45] = typeof(global::System.Collections.Generic.IDictionary<global::METRO.SimpleGraph.DataVertex, global::GraphX.Controls.VertexControl>);
            _typeTable[46] = typeof(global::GraphX.VertexEventOptions);
            _typeTable[47] = typeof(global::GraphX.VertexShape);
            _typeTable[48] = typeof(global::GraphX.Animations.MoveAnimationBase);
            _typeTable[49] = typeof(global::GraphX.Models.Interfaces.IOneWayControlAnimation);
            _typeTable[50] = typeof(global::GraphX.Models.Interfaces.IBidirectionalControlAnimation);
            _typeTable[51] = typeof(global::Windows.Foundation.Size);
            _typeTable[52] = typeof(global::METRO.SimpleGraph.MainPage);
            _typeTable[53] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[54] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[55] = typeof(global::GraphX.Controls.EdgeLabelControl);
            _typeTable[56] = typeof(global::GraphX.Controls.VertexLabelControl);
            _typeTable[57] = typeof(global::GraphX.Controls.VertexLabelPositionMode);
            _typeTable[58] = typeof(global::GraphX.Controls.VertexLabelPositionSide);
            _typeTable[59] = typeof(global::GraphX.Converters.VisibilityToBoolConverter);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ZoomControl() { return new global::GraphX.Controls.ZoomControl(); }
        private object Activate_14_ZCP() { return new global::GraphX.Controls.Zoom.ZCP(); }
        private object Activate_21_GraphAreaExample() { return new global::METRO.SimpleGraph.GraphAreaExample(); }
        private object Activate_22_GraphArea() { return new global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>(); }
        private object Activate_30_EdgeControl() { return new global::GraphX.Controls.EdgeControl(); }
        private object Activate_35_DataEdge() { return new global::METRO.SimpleGraph.DataEdge(); }
        private object Activate_43_DataVertex() { return new global::METRO.SimpleGraph.DataVertex(); }
        private object Activate_52_MainPage() { return new global::METRO.SimpleGraph.MainPage(); }
        private object Activate_55_EdgeLabelControl() { return new global::GraphX.Controls.EdgeLabelControl(); }
        private object Activate_56_VertexLabelControl() { return new global::GraphX.Controls.VertexLabelControl(); }
        private object Activate_59_VisibilityToBoolConverter() { return new global::GraphX.Converters.VisibilityToBoolConverter(); }
        private void MapAdd_29_IDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::METRO.SimpleGraph.DataEdge, global::GraphX.Controls.EdgeControl>)instance;
            var newKey = (global::METRO.SimpleGraph.DataEdge)key;
            var newItem = (global::GraphX.Controls.EdgeControl)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_45_IDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::METRO.SimpleGraph.DataVertex, global::GraphX.Controls.VertexControl>)instance;
            var newKey = (global::METRO.SimpleGraph.DataVertex)key;
            var newItem = (global::GraphX.Controls.VertexControl)item;
            collection.Add(newKey, newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  GraphX.Controls.ZoomControl
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_0_ZoomControl;
                userType.AddMemberName("ZoomToFillCommand");
                userType.AddMemberName("CenterToContentCommand");
                userType.AddMemberName("IsAnimationDisabled");
                userType.AddMemberName("UseCtrlForMouseWheel");
                userType.AddMemberName("UseAbsoluteZoomOnMouseWheel");
                userType.AddMemberName("ZoomBoxBackground");
                userType.AddMemberName("ZoomBoxBorderBrush");
                userType.AddMemberName("ZoomBoxBorderThickness");
                userType.AddMemberName("ZoomBoxOpacity");
                userType.AddMemberName("ZoomBox");
                userType.AddMemberName("OrigoPosition");
                userType.AddMemberName("TranslateX");
                userType.AddMemberName("TranslateY");
                userType.AddMemberName("AnimationLength");
                userType.AddMemberName("MinZoom");
                userType.AddMemberName("MaxZoom");
                userType.AddMemberName("MaxZoomDelta");
                userType.AddMemberName("ZoomDeltaMultiplier");
                userType.AddMemberName("Zoom");
                userType.AddMemberName("ContentVisual");
                userType.AddMemberName("TrackableContent");
                userType.AddMemberName("IsContentTrackable");
                userType.AddMemberName("Presenter");
                userType.AddMemberName("PresenterVisual");
                userType.AddMemberName("ModifierMode");
                userType.AddMemberName("Mode");
                userType.AddMemberName("ViewFinderVisibility");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  GraphX.DelegateCommand`1<Object>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  Object
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Boolean
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Double
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.Foundation.Rect
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Windows.Foundation.Point
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  TimeSpan
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  System.ValueType
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 12:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  GraphX.ITrackableContent
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  GraphX.Controls.Zoom.ZCP
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentPresenter"));
                userType.Activator = Activate_14_ZCP;
                userType.AddMemberName("ContentSize");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.ContentPresenter
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  GraphX.Controls.ZoomViewModifierMode
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::GraphX.Controls.ZoomViewModifierMode.None);
                userType.AddEnumValue("Pan", global::GraphX.Controls.ZoomViewModifierMode.Pan);
                userType.AddEnumValue("ZoomIn", global::GraphX.Controls.ZoomViewModifierMode.ZoomIn);
                userType.AddEnumValue("ZoomOut", global::GraphX.Controls.ZoomViewModifierMode.ZoomOut);
                userType.AddEnumValue("ZoomBox", global::GraphX.Controls.ZoomViewModifierMode.ZoomBox);
                xamlType = userType;
                break;

            case 17:   //  System.Enum
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 18:   //  GraphX.Controls.ZoomControlModes
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Fill", global::GraphX.Controls.ZoomControlModes.Fill);
                userType.AddEnumValue("Original", global::GraphX.Controls.ZoomControlModes.Original);
                userType.AddEnumValue("Custom", global::GraphX.Controls.ZoomControlModes.Custom);
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  METRO.SimpleGraph.GraphAreaExample
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>"));
                userType.Activator = Activate_21_GraphAreaExample;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GraphX.GraphAreaBase"));
                userType.Activator = Activate_22_GraphArea;
                userType.AddMemberName("LogicCore");
                userType.AddMemberName("ControlFactory");
                userType.AddMemberName("EnableVisualPropsRecovery");
                userType.AddMemberName("EnableVisualPropsApply");
                userType.AddMemberName("StateStorage");
                userType.AddMemberName("EdgesList");
                userType.AddMemberName("VertexList");
                xamlType = userType;
                break;

            case 23:   //  GraphX.GraphAreaBase
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Canvas"));
                userType.AddMemberName("AutoAssignMissingDataId");
                userType.AddMemberName("ExternalSettings");
                userType.AddMemberName("MoveAnimation");
                userType.AddMemberName("DeleteAnimation");
                userType.AddMemberName("MouseOverAnimation");
                userType.AddMemberName("ContentSize");
                userType.AddMemberName("SideExpansionSize");
                userType.AddMemberName("FinalX");
                userType.AddMemberName("FinalY");
                xamlType = userType;
                break;

            case 24:   //  Windows.UI.Xaml.Controls.Canvas
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  GraphX.IGXLogicCore`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  GraphX.Controls.Models.IGraphControlFactory
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  GraphX.StateStorage`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.Generic.IDictionary`2<METRO.SimpleGraph.DataEdge, GraphX.Controls.EdgeControl>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.DictionaryAdd = MapAdd_29_IDictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  GraphX.Controls.EdgeControl
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_30_EdgeControl;
                userType.AddMemberName("RootArea");
                userType.AddMemberName("IsSelfLooped");
                userType.AddMemberName("LabelAngle");
                userType.AddMemberName("DashStyle");
                userType.AddMemberName("CanBeParallel");
                userType.AddMemberName("UpdateLabelPosition");
                userType.AddMemberName("IsHiddenEdgesUpdated");
                userType.AddMemberName("ShowArrows");
                userType.AddMemberName("ShowLabel");
                userType.AddMemberName("AlignLabelsToEdges");
                userType.AddMemberName("LabelVerticalOffset");
                userType.AddMemberName("ManualDrawing");
                userType.AddMemberName("EventOptions");
                userType.AddMemberName("Source");
                userType.AddMemberName("Target");
                userType.AddMemberName("Edge");
                userType.AddMemberName("StrokeThickness");
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  GraphX.EdgeDashStyle
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Solid", global::GraphX.EdgeDashStyle.Solid);
                userType.AddEnumValue("Dash", global::GraphX.EdgeDashStyle.Dash);
                userType.AddEnumValue("Dot", global::GraphX.EdgeDashStyle.Dot);
                userType.AddEnumValue("DashDot", global::GraphX.EdgeDashStyle.DashDot);
                userType.AddEnumValue("DashDotDot", global::GraphX.EdgeDashStyle.DashDotDot);
                xamlType = userType;
                break;

            case 33:   //  GraphX.EdgeEventOptions
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  GraphX.Controls.VertexControl
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("EventOptions");
                userType.AddMemberName("LabelAngle");
                userType.AddMemberName("VertexShape");
                userType.AddMemberName("Vertex");
                userType.AddMemberName("RootArea");
                userType.AddMemberName("ShowLabel");
                xamlType = userType;
                break;

            case 35:   //  METRO.SimpleGraph.DataEdge
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>"));
                userType.Activator = Activate_35_DataEdge;
                userType.AddMemberName("Text");
                userType.AddMemberName("VisualEdgeThickness");
                userType.AddMemberName("VisualEdgeTransparency");
                userType.AddMemberName("VisualColor");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("SkipProcessing");
                userType.AddMemberName("ID");
                userType.AddMemberName("IsSelfLoop");
                userType.AddMemberName("RoutingPoints");
                userType.AddMemberName("Source");
                userType.AddMemberName("Target");
                userType.AddMemberName("Weight");
                xamlType = userType;
                break;

            case 37:   //  String
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  GraphX.PCL.Common.Enums.ProcessingOptionEnum
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::GraphX.PCL.Common.Enums.ProcessingOptionEnum.Default);
                userType.AddEnumValue("Freeze", global::GraphX.PCL.Common.Enums.ProcessingOptionEnum.Freeze);
                userType.AddEnumValue("Exclude", global::GraphX.PCL.Common.Enums.ProcessingOptionEnum.Exclude);
                xamlType = userType;
                break;

            case 39:   //  Int32
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  GraphX.Measure.Point[]
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  System.Array
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 42:   //  GraphX.Measure.Point
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("X");
                userType.AddMemberName("Y");
                xamlType = userType;
                break;

            case 43:   //  METRO.SimpleGraph.DataVertex
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GraphX.VertexBase"));
                userType.Activator = Activate_43_DataVertex;
                userType.AddMemberName("LabelText");
                userType.AddMemberName("VisualSelected");
                userType.AddMemberName("VisualDiameter");
                userType.AddMemberName("VisualInnerDiameter");
                userType.AddMemberName("VisualOuterRingThickness");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  GraphX.VertexBase
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("SkipProcessing");
                userType.AddMemberName("ID");
                xamlType = userType;
                break;

            case 45:   //  System.Collections.Generic.IDictionary`2<METRO.SimpleGraph.DataVertex, GraphX.Controls.VertexControl>
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.DictionaryAdd = MapAdd_45_IDictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  GraphX.VertexEventOptions
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  GraphX.VertexShape
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Rectangle", global::GraphX.VertexShape.Rectangle);
                userType.AddEnumValue("Diamond", global::GraphX.VertexShape.Diamond);
                userType.AddEnumValue("Triangle", global::GraphX.VertexShape.Triangle);
                userType.AddEnumValue("Circle", global::GraphX.VertexShape.Circle);
                xamlType = userType;
                break;

            case 48:   //  GraphX.Animations.MoveAnimationBase
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 49:   //  GraphX.Models.Interfaces.IOneWayControlAnimation
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  GraphX.Models.Interfaces.IBidirectionalControlAnimation
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  Windows.Foundation.Size
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  METRO.SimpleGraph.MainPage
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_52_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 54:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  GraphX.Controls.EdgeLabelControl
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_55_EdgeLabelControl;
                userType.AddMemberName("Angle");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 56:   //  GraphX.Controls.VertexLabelControl
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_56_VertexLabelControl;
                userType.AddMemberName("LabelPositionMode");
                userType.AddMemberName("LabelPositionSide");
                userType.AddMemberName("Angle");
                userType.AddMemberName("LabelPosition");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 57:   //  GraphX.Controls.VertexLabelPositionMode
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Sides", global::GraphX.Controls.VertexLabelPositionMode.Sides);
                userType.AddEnumValue("Coordinates", global::GraphX.Controls.VertexLabelPositionMode.Coordinates);
                xamlType = userType;
                break;

            case 58:   //  GraphX.Controls.VertexLabelPositionSide
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("TopLeft", global::GraphX.Controls.VertexLabelPositionSide.TopLeft);
                userType.AddEnumValue("TopRight", global::GraphX.Controls.VertexLabelPositionSide.TopRight);
                userType.AddEnumValue("BottomLeft", global::GraphX.Controls.VertexLabelPositionSide.BottomLeft);
                userType.AddEnumValue("BottomRight", global::GraphX.Controls.VertexLabelPositionSide.BottomRight);
                userType.AddEnumValue("Top", global::GraphX.Controls.VertexLabelPositionSide.Top);
                userType.AddEnumValue("Right", global::GraphX.Controls.VertexLabelPositionSide.Right);
                userType.AddEnumValue("Bottom", global::GraphX.Controls.VertexLabelPositionSide.Bottom);
                userType.AddEnumValue("Left", global::GraphX.Controls.VertexLabelPositionSide.Left);
                xamlType = userType;
                break;

            case 59:   //  GraphX.Converters.VisibilityToBoolConverter
                userType = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_59_VisibilityToBoolConverter;
                userType.AddMemberName("Inverted");
                userType.AddMemberName("Not");
                userType.SetIsBindable();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_ZoomControl_ZoomToFillCommand(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomToFillCommand;
        }
        private object get_1_ZoomControl_CenterToContentCommand(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.CenterToContentCommand;
        }
        private object get_2_ZoomControl_IsAnimationDisabled(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.IsAnimationDisabled;
        }
        private void set_2_ZoomControl_IsAnimationDisabled(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.IsAnimationDisabled = (global::System.Boolean)Value;
        }
        private object get_3_ZoomControl_UseCtrlForMouseWheel(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.UseCtrlForMouseWheel;
        }
        private void set_3_ZoomControl_UseCtrlForMouseWheel(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.UseCtrlForMouseWheel = (global::System.Boolean)Value;
        }
        private object get_4_ZoomControl_UseAbsoluteZoomOnMouseWheel(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.UseAbsoluteZoomOnMouseWheel;
        }
        private void set_4_ZoomControl_UseAbsoluteZoomOnMouseWheel(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.UseAbsoluteZoomOnMouseWheel = (global::System.Boolean)Value;
        }
        private object get_5_ZoomControl_ZoomBoxBackground(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomBoxBackground;
        }
        private void set_5_ZoomControl_ZoomBoxBackground(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ZoomBoxBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_6_ZoomControl_ZoomBoxBorderBrush(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomBoxBorderBrush;
        }
        private void set_6_ZoomControl_ZoomBoxBorderBrush(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ZoomBoxBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_7_ZoomControl_ZoomBoxBorderThickness(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomBoxBorderThickness;
        }
        private void set_7_ZoomControl_ZoomBoxBorderThickness(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ZoomBoxBorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_8_ZoomControl_ZoomBoxOpacity(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomBoxOpacity;
        }
        private void set_8_ZoomControl_ZoomBoxOpacity(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ZoomBoxOpacity = (global::System.Double)Value;
        }
        private object get_9_ZoomControl_ZoomBox(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomBox;
        }
        private void set_9_ZoomControl_ZoomBox(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ZoomBox = (global::Windows.Foundation.Rect)Value;
        }
        private object get_10_ZoomControl_OrigoPosition(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.OrigoPosition;
        }
        private object get_11_ZoomControl_TranslateX(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.TranslateX;
        }
        private void set_11_ZoomControl_TranslateX(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.TranslateX = (global::System.Double)Value;
        }
        private object get_12_ZoomControl_TranslateY(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.TranslateY;
        }
        private void set_12_ZoomControl_TranslateY(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.TranslateY = (global::System.Double)Value;
        }
        private object get_13_ZoomControl_AnimationLength(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.AnimationLength;
        }
        private void set_13_ZoomControl_AnimationLength(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.AnimationLength = (global::System.TimeSpan)Value;
        }
        private object get_14_ZoomControl_MinZoom(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.MinZoom;
        }
        private void set_14_ZoomControl_MinZoom(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.MinZoom = (global::System.Double)Value;
        }
        private object get_15_ZoomControl_MaxZoom(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.MaxZoom;
        }
        private void set_15_ZoomControl_MaxZoom(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.MaxZoom = (global::System.Double)Value;
        }
        private object get_16_ZoomControl_MaxZoomDelta(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.MaxZoomDelta;
        }
        private void set_16_ZoomControl_MaxZoomDelta(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.MaxZoomDelta = (global::System.Double)Value;
        }
        private object get_17_ZoomControl_ZoomDeltaMultiplier(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ZoomDeltaMultiplier;
        }
        private void set_17_ZoomControl_ZoomDeltaMultiplier(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ZoomDeltaMultiplier = (global::System.Double)Value;
        }
        private object get_18_ZoomControl_Zoom(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.Zoom;
        }
        private void set_18_ZoomControl_Zoom(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.Zoom = (global::System.Double)Value;
        }
        private object get_19_ZoomControl_ContentVisual(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ContentVisual;
        }
        private object get_20_ZoomControl_TrackableContent(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.TrackableContent;
        }
        private object get_21_ZoomControl_IsContentTrackable(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.IsContentTrackable;
        }
        private object get_22_ZoomControl_Presenter(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.Presenter;
        }
        private void set_22_ZoomControl_Presenter(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.Presenter = (global::GraphX.Controls.Zoom.ZCP)Value;
        }
        private object get_23_ZoomControl_PresenterVisual(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.PresenterVisual;
        }
        private object get_24_ZoomControl_ModifierMode(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.ModifierMode;
        }
        private void set_24_ZoomControl_ModifierMode(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.ModifierMode = (global::GraphX.Controls.ZoomViewModifierMode)Value;
        }
        private object get_25_ZoomControl_Mode(object instance)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            return that.Mode;
        }
        private void set_25_ZoomControl_Mode(object instance, object Value)
        {
            var that = (global::GraphX.Controls.ZoomControl)instance;
            that.Mode = (global::GraphX.Controls.ZoomControlModes)Value;
        }
        private object get_26_ZoomControl_ViewFinderVisibility(object instance)
        {
            return global::GraphX.Controls.ZoomControl.GetViewFinderVisibility((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_26_ZoomControl_ViewFinderVisibility(object instance, object Value)
        {
            global::GraphX.Controls.ZoomControl.SetViewFinderVisibility((global::Windows.UI.Xaml.DependencyObject)instance, (global::Windows.UI.Xaml.Visibility)Value);
        }
        private object get_27_GraphArea_LogicCore(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.LogicCore;
        }
        private void set_27_GraphArea_LogicCore(object instance, object Value)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            that.LogicCore = (global::GraphX.IGXLogicCore<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)Value;
        }
        private object get_28_GraphArea_ControlFactory(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.ControlFactory;
        }
        private void set_28_GraphArea_ControlFactory(object instance, object Value)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            that.ControlFactory = (global::GraphX.Controls.Models.IGraphControlFactory)Value;
        }
        private object get_29_GraphArea_EnableVisualPropsRecovery(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.EnableVisualPropsRecovery;
        }
        private void set_29_GraphArea_EnableVisualPropsRecovery(object instance, object Value)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            that.EnableVisualPropsRecovery = (global::System.Boolean)Value;
        }
        private object get_30_GraphArea_EnableVisualPropsApply(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.EnableVisualPropsApply;
        }
        private void set_30_GraphArea_EnableVisualPropsApply(object instance, object Value)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            that.EnableVisualPropsApply = (global::System.Boolean)Value;
        }
        private object get_31_GraphArea_StateStorage(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.StateStorage;
        }
        private object get_32_GraphArea_EdgesList(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.EdgesList;
        }
        private object get_33_EdgeControl_RootArea(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.RootArea;
        }
        private void set_33_EdgeControl_RootArea(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.RootArea = (global::GraphX.GraphAreaBase)Value;
        }
        private object get_34_EdgeControl_IsSelfLooped(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.IsSelfLooped;
        }
        private object get_35_EdgeControl_LabelAngle(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.LabelAngle;
        }
        private void set_35_EdgeControl_LabelAngle(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.LabelAngle = (global::System.Double)Value;
        }
        private object get_36_EdgeControl_DashStyle(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.DashStyle;
        }
        private void set_36_EdgeControl_DashStyle(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.DashStyle = (global::GraphX.EdgeDashStyle)Value;
        }
        private object get_37_EdgeControl_CanBeParallel(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.CanBeParallel;
        }
        private void set_37_EdgeControl_CanBeParallel(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.CanBeParallel = (global::System.Boolean)Value;
        }
        private object get_38_EdgeControl_UpdateLabelPosition(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.UpdateLabelPosition;
        }
        private void set_38_EdgeControl_UpdateLabelPosition(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.UpdateLabelPosition = (global::System.Boolean)Value;
        }
        private object get_39_EdgeControl_IsHiddenEdgesUpdated(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.IsHiddenEdgesUpdated;
        }
        private void set_39_EdgeControl_IsHiddenEdgesUpdated(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.IsHiddenEdgesUpdated = (global::System.Boolean)Value;
        }
        private object get_40_EdgeControl_ShowArrows(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.ShowArrows;
        }
        private void set_40_EdgeControl_ShowArrows(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.ShowArrows = (global::System.Boolean)Value;
        }
        private object get_41_EdgeControl_ShowLabel(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.ShowLabel;
        }
        private void set_41_EdgeControl_ShowLabel(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.ShowLabel = (global::System.Boolean)Value;
        }
        private object get_42_EdgeControl_AlignLabelsToEdges(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.AlignLabelsToEdges;
        }
        private void set_42_EdgeControl_AlignLabelsToEdges(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.AlignLabelsToEdges = (global::System.Boolean)Value;
        }
        private object get_43_EdgeControl_LabelVerticalOffset(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.LabelVerticalOffset;
        }
        private void set_43_EdgeControl_LabelVerticalOffset(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.LabelVerticalOffset = (global::System.Double)Value;
        }
        private object get_44_EdgeControl_ManualDrawing(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.ManualDrawing;
        }
        private void set_44_EdgeControl_ManualDrawing(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.ManualDrawing = (global::System.Boolean)Value;
        }
        private object get_45_EdgeControl_EventOptions(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.EventOptions;
        }
        private object get_46_EdgeControl_Source(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.Source;
        }
        private void set_46_EdgeControl_Source(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.Source = (global::GraphX.Controls.VertexControl)Value;
        }
        private object get_47_EdgeControl_Target(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.Target;
        }
        private void set_47_EdgeControl_Target(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.Target = (global::GraphX.Controls.VertexControl)Value;
        }
        private object get_48_EdgeControl_Edge(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.Edge;
        }
        private void set_48_EdgeControl_Edge(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.Edge = (global::System.Object)Value;
        }
        private object get_49_EdgeControl_StrokeThickness(object instance)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            return that.StrokeThickness;
        }
        private void set_49_EdgeControl_StrokeThickness(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeControl)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_50_DataEdge_Text(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            return that.Text;
        }
        private void set_50_DataEdge_Text(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_51_DataEdge_VisualEdgeThickness(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            return that.VisualEdgeThickness;
        }
        private void set_51_DataEdge_VisualEdgeThickness(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            that.VisualEdgeThickness = (global::System.Double)Value;
        }
        private object get_52_DataEdge_VisualEdgeTransparency(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            return that.VisualEdgeTransparency;
        }
        private void set_52_DataEdge_VisualEdgeTransparency(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            that.VisualEdgeTransparency = (global::System.Double)Value;
        }
        private object get_53_DataEdge_VisualColor(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            return that.VisualColor;
        }
        private void set_53_DataEdge_VisualColor(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataEdge)instance;
            that.VisualColor = (global::System.String)Value;
        }
        private object get_54_EdgeBase_SkipProcessing(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.SkipProcessing;
        }
        private void set_54_EdgeBase_SkipProcessing(object instance, object Value)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            that.SkipProcessing = (global::GraphX.PCL.Common.Enums.ProcessingOptionEnum)Value;
        }
        private object get_55_EdgeBase_ID(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.ID;
        }
        private void set_55_EdgeBase_ID(object instance, object Value)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_56_EdgeBase_IsSelfLoop(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.IsSelfLoop;
        }
        private object get_57_EdgeBase_RoutingPoints(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.RoutingPoints;
        }
        private void set_57_EdgeBase_RoutingPoints(object instance, object Value)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            that.RoutingPoints = (global::GraphX.Measure.Point[])Value;
        }
        private object get_58_Point_X(object instance)
        {
            var that = (global::GraphX.Measure.Point)instance;
            return that.X;
        }
        private void set_58_Point_X(object instance, object Value)
        {
            var that = (global::GraphX.Measure.Point)instance;
            that.X = (global::System.Double)Value;
        }
        private object get_59_Point_Y(object instance)
        {
            var that = (global::GraphX.Measure.Point)instance;
            return that.Y;
        }
        private void set_59_Point_Y(object instance, object Value)
        {
            var that = (global::GraphX.Measure.Point)instance;
            that.Y = (global::System.Double)Value;
        }
        private object get_60_EdgeBase_Source(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.Source;
        }
        private void set_60_EdgeBase_Source(object instance, object Value)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            that.Source = (global::METRO.SimpleGraph.DataVertex)Value;
        }
        private object get_61_EdgeBase_Target(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.Target;
        }
        private void set_61_EdgeBase_Target(object instance, object Value)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            that.Target = (global::METRO.SimpleGraph.DataVertex)Value;
        }
        private object get_62_EdgeBase_Weight(object instance)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            return that.Weight;
        }
        private void set_62_EdgeBase_Weight(object instance, object Value)
        {
            var that = (global::GraphX.EdgeBase<global::METRO.SimpleGraph.DataVertex>)instance;
            that.Weight = (global::System.Double)Value;
        }
        private object get_63_GraphArea_VertexList(object instance)
        {
            var that = (global::GraphX.GraphArea<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph<global::METRO.SimpleGraph.DataVertex, global::METRO.SimpleGraph.DataEdge>>)instance;
            return that.VertexList;
        }
        private object get_64_VertexControl_EventOptions(object instance)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            return that.EventOptions;
        }
        private object get_65_VertexControl_LabelAngle(object instance)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            return that.LabelAngle;
        }
        private void set_65_VertexControl_LabelAngle(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            that.LabelAngle = (global::System.Double)Value;
        }
        private object get_66_VertexControl_VertexShape(object instance)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            return that.VertexShape;
        }
        private void set_66_VertexControl_VertexShape(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            that.VertexShape = (global::GraphX.VertexShape)Value;
        }
        private object get_67_VertexControl_Vertex(object instance)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            return that.Vertex;
        }
        private void set_67_VertexControl_Vertex(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            that.Vertex = (global::System.Object)Value;
        }
        private object get_68_VertexControl_RootArea(object instance)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            return that.RootArea;
        }
        private void set_68_VertexControl_RootArea(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            that.RootArea = (global::GraphX.GraphAreaBase)Value;
        }
        private object get_69_VertexControl_ShowLabel(object instance)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            return that.ShowLabel;
        }
        private void set_69_VertexControl_ShowLabel(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexControl)instance;
            that.ShowLabel = (global::System.Boolean)Value;
        }
        private object get_70_DataVertex_LabelText(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            return that.LabelText;
        }
        private void set_70_DataVertex_LabelText(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            that.LabelText = (global::System.String)Value;
        }
        private object get_71_DataVertex_VisualSelected(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            return that.VisualSelected;
        }
        private void set_71_DataVertex_VisualSelected(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            that.VisualSelected = (global::System.Boolean)Value;
        }
        private object get_72_DataVertex_VisualDiameter(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            return that.VisualDiameter;
        }
        private void set_72_DataVertex_VisualDiameter(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            that.VisualDiameter = (global::System.Int32)Value;
        }
        private object get_73_DataVertex_VisualInnerDiameter(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            return that.VisualInnerDiameter;
        }
        private void set_73_DataVertex_VisualInnerDiameter(object instance, object Value)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            that.VisualInnerDiameter = (global::System.Int32)Value;
        }
        private object get_74_DataVertex_VisualOuterRingThickness(object instance)
        {
            var that = (global::METRO.SimpleGraph.DataVertex)instance;
            return that.VisualOuterRingThickness;
        }
        private object get_75_VertexBase_SkipProcessing(object instance)
        {
            var that = (global::GraphX.VertexBase)instance;
            return that.SkipProcessing;
        }
        private void set_75_VertexBase_SkipProcessing(object instance, object Value)
        {
            var that = (global::GraphX.VertexBase)instance;
            that.SkipProcessing = (global::GraphX.PCL.Common.Enums.ProcessingOptionEnum)Value;
        }
        private object get_76_VertexBase_ID(object instance)
        {
            var that = (global::GraphX.VertexBase)instance;
            return that.ID;
        }
        private void set_76_VertexBase_ID(object instance, object Value)
        {
            var that = (global::GraphX.VertexBase)instance;
            that.ID = (global::System.Int32)Value;
        }
        private object get_77_GraphAreaBase_AutoAssignMissingDataId(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.AutoAssignMissingDataId;
        }
        private void set_77_GraphAreaBase_AutoAssignMissingDataId(object instance, object Value)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            that.AutoAssignMissingDataId = (global::System.Boolean)Value;
        }
        private object get_78_GraphAreaBase_ExternalSettings(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.ExternalSettings;
        }
        private void set_78_GraphAreaBase_ExternalSettings(object instance, object Value)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            that.ExternalSettings = (global::System.Object)Value;
        }
        private object get_79_GraphAreaBase_MoveAnimation(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.MoveAnimation;
        }
        private void set_79_GraphAreaBase_MoveAnimation(object instance, object Value)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            that.MoveAnimation = (global::GraphX.Animations.MoveAnimationBase)Value;
        }
        private object get_80_GraphAreaBase_DeleteAnimation(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.DeleteAnimation;
        }
        private void set_80_GraphAreaBase_DeleteAnimation(object instance, object Value)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            that.DeleteAnimation = (global::GraphX.Models.Interfaces.IOneWayControlAnimation)Value;
        }
        private object get_81_GraphAreaBase_MouseOverAnimation(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.MouseOverAnimation;
        }
        private void set_81_GraphAreaBase_MouseOverAnimation(object instance, object Value)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            that.MouseOverAnimation = (global::GraphX.Models.Interfaces.IBidirectionalControlAnimation)Value;
        }
        private object get_82_GraphAreaBase_ContentSize(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.ContentSize;
        }
        private object get_83_GraphAreaBase_SideExpansionSize(object instance)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            return that.SideExpansionSize;
        }
        private void set_83_GraphAreaBase_SideExpansionSize(object instance, object Value)
        {
            var that = (global::GraphX.GraphAreaBase)instance;
            that.SideExpansionSize = (global::Windows.Foundation.Size)Value;
        }
        private object get_84_GraphAreaBase_FinalX(object instance)
        {
            return global::GraphX.GraphAreaBase.GetFinalX((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_84_GraphAreaBase_FinalX(object instance, object Value)
        {
            global::GraphX.GraphAreaBase.SetFinalX((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Double)Value);
        }
        private object get_85_GraphAreaBase_FinalY(object instance)
        {
            return global::GraphX.GraphAreaBase.GetFinalY((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_85_GraphAreaBase_FinalY(object instance, object Value)
        {
            global::GraphX.GraphAreaBase.SetFinalY((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Double)Value);
        }
        private object get_86_EdgeLabelControl_Angle(object instance)
        {
            var that = (global::GraphX.Controls.EdgeLabelControl)instance;
            return that.Angle;
        }
        private void set_86_EdgeLabelControl_Angle(object instance, object Value)
        {
            var that = (global::GraphX.Controls.EdgeLabelControl)instance;
            that.Angle = (global::System.Double)Value;
        }
        private object get_87_VertexLabelControl_LabelPositionMode(object instance)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            return that.LabelPositionMode;
        }
        private void set_87_VertexLabelControl_LabelPositionMode(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            that.LabelPositionMode = (global::GraphX.Controls.VertexLabelPositionMode)Value;
        }
        private object get_88_VertexLabelControl_LabelPositionSide(object instance)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            return that.LabelPositionSide;
        }
        private void set_88_VertexLabelControl_LabelPositionSide(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            that.LabelPositionSide = (global::GraphX.Controls.VertexLabelPositionSide)Value;
        }
        private object get_89_VertexLabelControl_Angle(object instance)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            return that.Angle;
        }
        private void set_89_VertexLabelControl_Angle(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            that.Angle = (global::System.Double)Value;
        }
        private object get_90_VertexLabelControl_LabelPosition(object instance)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            return that.LabelPosition;
        }
        private void set_90_VertexLabelControl_LabelPosition(object instance, object Value)
        {
            var that = (global::GraphX.Controls.VertexLabelControl)instance;
            that.LabelPosition = (global::Windows.Foundation.Point)Value;
        }
        private object get_91_VisibilityToBoolConverter_Inverted(object instance)
        {
            var that = (global::GraphX.Converters.VisibilityToBoolConverter)instance;
            return that.Inverted;
        }
        private void set_91_VisibilityToBoolConverter_Inverted(object instance, object Value)
        {
            var that = (global::GraphX.Converters.VisibilityToBoolConverter)instance;
            that.Inverted = (global::System.Boolean)Value;
        }
        private object get_92_VisibilityToBoolConverter_Not(object instance)
        {
            var that = (global::GraphX.Converters.VisibilityToBoolConverter)instance;
            return that.Not;
        }
        private void set_92_VisibilityToBoolConverter_Not(object instance, object Value)
        {
            var that = (global::GraphX.Converters.VisibilityToBoolConverter)instance;
            that.Not = (global::System.Boolean)Value;
        }
        private object get_93_ZCP_ContentSize(object instance)
        {
            var that = (global::GraphX.Controls.Zoom.ZCP)instance;
            return that.ContentSize;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember xamlMember = null;
            global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "GraphX.Controls.ZoomControl.ZoomToFillCommand":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomToFillCommand", "GraphX.DelegateCommand`1<Object>");
                xamlMember.Getter = get_0_ZoomControl_ZoomToFillCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.CenterToContentCommand":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "CenterToContentCommand", "GraphX.DelegateCommand`1<Object>");
                xamlMember.Getter = get_1_ZoomControl_CenterToContentCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.IsAnimationDisabled":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "IsAnimationDisabled", "Boolean");
                xamlMember.Getter = get_2_ZoomControl_IsAnimationDisabled;
                xamlMember.Setter = set_2_ZoomControl_IsAnimationDisabled;
                break;
            case "GraphX.Controls.ZoomControl.UseCtrlForMouseWheel":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "UseCtrlForMouseWheel", "Boolean");
                xamlMember.Getter = get_3_ZoomControl_UseCtrlForMouseWheel;
                xamlMember.Setter = set_3_ZoomControl_UseCtrlForMouseWheel;
                break;
            case "GraphX.Controls.ZoomControl.UseAbsoluteZoomOnMouseWheel":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "UseAbsoluteZoomOnMouseWheel", "Boolean");
                xamlMember.Getter = get_4_ZoomControl_UseAbsoluteZoomOnMouseWheel;
                xamlMember.Setter = set_4_ZoomControl_UseAbsoluteZoomOnMouseWheel;
                break;
            case "GraphX.Controls.ZoomControl.ZoomBoxBackground":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomBoxBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_ZoomControl_ZoomBoxBackground;
                xamlMember.Setter = set_5_ZoomControl_ZoomBoxBackground;
                break;
            case "GraphX.Controls.ZoomControl.ZoomBoxBorderBrush":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomBoxBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_ZoomControl_ZoomBoxBorderBrush;
                xamlMember.Setter = set_6_ZoomControl_ZoomBoxBorderBrush;
                break;
            case "GraphX.Controls.ZoomControl.ZoomBoxBorderThickness":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomBoxBorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_ZoomControl_ZoomBoxBorderThickness;
                xamlMember.Setter = set_7_ZoomControl_ZoomBoxBorderThickness;
                break;
            case "GraphX.Controls.ZoomControl.ZoomBoxOpacity":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomBoxOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_ZoomControl_ZoomBoxOpacity;
                xamlMember.Setter = set_8_ZoomControl_ZoomBoxOpacity;
                break;
            case "GraphX.Controls.ZoomControl.ZoomBox":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomBox", "Windows.Foundation.Rect");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_ZoomControl_ZoomBox;
                xamlMember.Setter = set_9_ZoomControl_ZoomBox;
                break;
            case "GraphX.Controls.ZoomControl.OrigoPosition":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "OrigoPosition", "Windows.Foundation.Point");
                xamlMember.Getter = get_10_ZoomControl_OrigoPosition;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.TranslateX":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "TranslateX", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_ZoomControl_TranslateX;
                xamlMember.Setter = set_11_ZoomControl_TranslateX;
                break;
            case "GraphX.Controls.ZoomControl.TranslateY":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "TranslateY", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_ZoomControl_TranslateY;
                xamlMember.Setter = set_12_ZoomControl_TranslateY;
                break;
            case "GraphX.Controls.ZoomControl.AnimationLength":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "AnimationLength", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ZoomControl_AnimationLength;
                xamlMember.Setter = set_13_ZoomControl_AnimationLength;
                break;
            case "GraphX.Controls.ZoomControl.MinZoom":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "MinZoom", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ZoomControl_MinZoom;
                xamlMember.Setter = set_14_ZoomControl_MinZoom;
                break;
            case "GraphX.Controls.ZoomControl.MaxZoom":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "MaxZoom", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ZoomControl_MaxZoom;
                xamlMember.Setter = set_15_ZoomControl_MaxZoom;
                break;
            case "GraphX.Controls.ZoomControl.MaxZoomDelta":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "MaxZoomDelta", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ZoomControl_MaxZoomDelta;
                xamlMember.Setter = set_16_ZoomControl_MaxZoomDelta;
                break;
            case "GraphX.Controls.ZoomControl.ZoomDeltaMultiplier":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ZoomDeltaMultiplier", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ZoomControl_ZoomDeltaMultiplier;
                xamlMember.Setter = set_17_ZoomControl_ZoomDeltaMultiplier;
                break;
            case "GraphX.Controls.ZoomControl.Zoom":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Zoom", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ZoomControl_Zoom;
                xamlMember.Setter = set_18_ZoomControl_Zoom;
                break;
            case "GraphX.Controls.ZoomControl.ContentVisual":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ContentVisual", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_19_ZoomControl_ContentVisual;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.TrackableContent":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "TrackableContent", "GraphX.ITrackableContent");
                xamlMember.Getter = get_20_ZoomControl_TrackableContent;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.IsContentTrackable":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "IsContentTrackable", "Boolean");
                xamlMember.Getter = get_21_ZoomControl_IsContentTrackable;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.Presenter":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Presenter", "GraphX.Controls.Zoom.ZCP");
                xamlMember.Getter = get_22_ZoomControl_Presenter;
                xamlMember.Setter = set_22_ZoomControl_Presenter;
                break;
            case "GraphX.Controls.ZoomControl.PresenterVisual":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "PresenterVisual", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_23_ZoomControl_PresenterVisual;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.ZoomControl.ModifierMode":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ModifierMode", "GraphX.Controls.ZoomViewModifierMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_ZoomControl_ModifierMode;
                xamlMember.Setter = set_24_ZoomControl_ModifierMode;
                break;
            case "GraphX.Controls.ZoomControl.Mode":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Mode", "GraphX.Controls.ZoomControlModes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_ZoomControl_Mode;
                xamlMember.Setter = set_25_ZoomControl_Mode;
                break;
            case "GraphX.Controls.ZoomControl.ViewFinderVisibility":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.ZoomControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ViewFinderVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_26_ZoomControl_ViewFinderVisibility;
                xamlMember.Setter = set_26_ZoomControl_ViewFinderVisibility;
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.LogicCore":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LogicCore", "GraphX.IGXLogicCore`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_GraphArea_LogicCore;
                xamlMember.Setter = set_27_GraphArea_LogicCore;
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.ControlFactory":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ControlFactory", "GraphX.Controls.Models.IGraphControlFactory");
                xamlMember.Getter = get_28_GraphArea_ControlFactory;
                xamlMember.Setter = set_28_GraphArea_ControlFactory;
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.EnableVisualPropsRecovery":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "EnableVisualPropsRecovery", "Boolean");
                xamlMember.Getter = get_29_GraphArea_EnableVisualPropsRecovery;
                xamlMember.Setter = set_29_GraphArea_EnableVisualPropsRecovery;
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.EnableVisualPropsApply":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "EnableVisualPropsApply", "Boolean");
                xamlMember.Getter = get_30_GraphArea_EnableVisualPropsApply;
                xamlMember.Setter = set_30_GraphArea_EnableVisualPropsApply;
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.StateStorage":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "StateStorage", "GraphX.StateStorage`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember.Getter = get_31_GraphArea_StateStorage;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.EdgesList":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "EdgesList", "System.Collections.Generic.IDictionary`2<METRO.SimpleGraph.DataEdge, GraphX.Controls.EdgeControl>");
                xamlMember.Getter = get_32_GraphArea_EdgesList;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.EdgeControl.RootArea":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "RootArea", "GraphX.GraphAreaBase");
                xamlMember.Getter = get_33_EdgeControl_RootArea;
                xamlMember.Setter = set_33_EdgeControl_RootArea;
                break;
            case "GraphX.Controls.EdgeControl.IsSelfLooped":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "IsSelfLooped", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_EdgeControl_IsSelfLooped;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.EdgeControl.LabelAngle":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelAngle", "Double");
                xamlMember.Getter = get_35_EdgeControl_LabelAngle;
                xamlMember.Setter = set_35_EdgeControl_LabelAngle;
                break;
            case "GraphX.Controls.EdgeControl.DashStyle":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "DashStyle", "GraphX.EdgeDashStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_EdgeControl_DashStyle;
                xamlMember.Setter = set_36_EdgeControl_DashStyle;
                break;
            case "GraphX.Controls.EdgeControl.CanBeParallel":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "CanBeParallel", "Boolean");
                xamlMember.Getter = get_37_EdgeControl_CanBeParallel;
                xamlMember.Setter = set_37_EdgeControl_CanBeParallel;
                break;
            case "GraphX.Controls.EdgeControl.UpdateLabelPosition":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "UpdateLabelPosition", "Boolean");
                xamlMember.Getter = get_38_EdgeControl_UpdateLabelPosition;
                xamlMember.Setter = set_38_EdgeControl_UpdateLabelPosition;
                break;
            case "GraphX.Controls.EdgeControl.IsHiddenEdgesUpdated":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "IsHiddenEdgesUpdated", "Boolean");
                xamlMember.Getter = get_39_EdgeControl_IsHiddenEdgesUpdated;
                xamlMember.Setter = set_39_EdgeControl_IsHiddenEdgesUpdated;
                break;
            case "GraphX.Controls.EdgeControl.ShowArrows":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ShowArrows", "Boolean");
                xamlMember.Getter = get_40_EdgeControl_ShowArrows;
                xamlMember.Setter = set_40_EdgeControl_ShowArrows;
                break;
            case "GraphX.Controls.EdgeControl.ShowLabel":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ShowLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_EdgeControl_ShowLabel;
                xamlMember.Setter = set_41_EdgeControl_ShowLabel;
                break;
            case "GraphX.Controls.EdgeControl.AlignLabelsToEdges":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "AlignLabelsToEdges", "Boolean");
                xamlMember.Getter = get_42_EdgeControl_AlignLabelsToEdges;
                xamlMember.Setter = set_42_EdgeControl_AlignLabelsToEdges;
                break;
            case "GraphX.Controls.EdgeControl.LabelVerticalOffset":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelVerticalOffset", "Double");
                xamlMember.Getter = get_43_EdgeControl_LabelVerticalOffset;
                xamlMember.Setter = set_43_EdgeControl_LabelVerticalOffset;
                break;
            case "GraphX.Controls.EdgeControl.ManualDrawing":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ManualDrawing", "Boolean");
                xamlMember.Getter = get_44_EdgeControl_ManualDrawing;
                xamlMember.Setter = set_44_EdgeControl_ManualDrawing;
                break;
            case "GraphX.Controls.EdgeControl.EventOptions":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "EventOptions", "GraphX.EdgeEventOptions");
                xamlMember.Getter = get_45_EdgeControl_EventOptions;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.EdgeControl.Source":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Source", "GraphX.Controls.VertexControl");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_EdgeControl_Source;
                xamlMember.Setter = set_46_EdgeControl_Source;
                break;
            case "GraphX.Controls.EdgeControl.Target":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Target", "GraphX.Controls.VertexControl");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_EdgeControl_Target;
                xamlMember.Setter = set_47_EdgeControl_Target;
                break;
            case "GraphX.Controls.EdgeControl.Edge":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Edge", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_EdgeControl_Edge;
                xamlMember.Setter = set_48_EdgeControl_Edge;
                break;
            case "GraphX.Controls.EdgeControl.StrokeThickness":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_EdgeControl_StrokeThickness;
                xamlMember.Setter = set_49_EdgeControl_StrokeThickness;
                break;
            case "METRO.SimpleGraph.DataEdge.Text":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataEdge");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_50_DataEdge_Text;
                xamlMember.Setter = set_50_DataEdge_Text;
                break;
            case "METRO.SimpleGraph.DataEdge.VisualEdgeThickness":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataEdge");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualEdgeThickness", "Double");
                xamlMember.Getter = get_51_DataEdge_VisualEdgeThickness;
                xamlMember.Setter = set_51_DataEdge_VisualEdgeThickness;
                break;
            case "METRO.SimpleGraph.DataEdge.VisualEdgeTransparency":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataEdge");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualEdgeTransparency", "Double");
                xamlMember.Getter = get_52_DataEdge_VisualEdgeTransparency;
                xamlMember.Setter = set_52_DataEdge_VisualEdgeTransparency;
                break;
            case "METRO.SimpleGraph.DataEdge.VisualColor":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataEdge");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualColor", "String");
                xamlMember.Getter = get_53_DataEdge_VisualColor;
                xamlMember.Setter = set_53_DataEdge_VisualColor;
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.SkipProcessing":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "SkipProcessing", "GraphX.PCL.Common.Enums.ProcessingOptionEnum");
                xamlMember.Getter = get_54_EdgeBase_SkipProcessing;
                xamlMember.Setter = set_54_EdgeBase_SkipProcessing;
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.ID":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_55_EdgeBase_ID;
                xamlMember.Setter = set_55_EdgeBase_ID;
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.IsSelfLoop":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "IsSelfLoop", "Boolean");
                xamlMember.Getter = get_56_EdgeBase_IsSelfLoop;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.RoutingPoints":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "RoutingPoints", "GraphX.Measure.Point[]");
                xamlMember.Getter = get_57_EdgeBase_RoutingPoints;
                xamlMember.Setter = set_57_EdgeBase_RoutingPoints;
                break;
            case "GraphX.Measure.Point.X":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Measure.Point");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "X", "Double");
                xamlMember.Getter = get_58_Point_X;
                xamlMember.Setter = set_58_Point_X;
                break;
            case "GraphX.Measure.Point.Y":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Measure.Point");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Y", "Double");
                xamlMember.Getter = get_59_Point_Y;
                xamlMember.Setter = set_59_Point_Y;
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.Source":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Source", "METRO.SimpleGraph.DataVertex");
                xamlMember.Getter = get_60_EdgeBase_Source;
                xamlMember.Setter = set_60_EdgeBase_Source;
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.Target":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Target", "METRO.SimpleGraph.DataVertex");
                xamlMember.Getter = get_61_EdgeBase_Target;
                xamlMember.Setter = set_61_EdgeBase_Target;
                break;
            case "GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>.Weight":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.EdgeBase`1<METRO.SimpleGraph.DataVertex>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Weight", "Double");
                xamlMember.Getter = get_62_EdgeBase_Weight;
                xamlMember.Setter = set_62_EdgeBase_Weight;
                break;
            case "GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>.VertexList":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphArea`3<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge, QuickGraph.BidirectionalGraph`2<METRO.SimpleGraph.DataVertex, METRO.SimpleGraph.DataEdge>>");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VertexList", "System.Collections.Generic.IDictionary`2<METRO.SimpleGraph.DataVertex, GraphX.Controls.VertexControl>");
                xamlMember.Getter = get_63_GraphArea_VertexList;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.VertexControl.EventOptions":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "EventOptions", "GraphX.VertexEventOptions");
                xamlMember.Getter = get_64_VertexControl_EventOptions;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.Controls.VertexControl.LabelAngle":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelAngle", "Double");
                xamlMember.Getter = get_65_VertexControl_LabelAngle;
                xamlMember.Setter = set_65_VertexControl_LabelAngle;
                break;
            case "GraphX.Controls.VertexControl.VertexShape":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VertexShape", "GraphX.VertexShape");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_VertexControl_VertexShape;
                xamlMember.Setter = set_66_VertexControl_VertexShape;
                break;
            case "GraphX.Controls.VertexControl.Vertex":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Vertex", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_VertexControl_Vertex;
                xamlMember.Setter = set_67_VertexControl_Vertex;
                break;
            case "GraphX.Controls.VertexControl.RootArea":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "RootArea", "GraphX.GraphAreaBase");
                xamlMember.Getter = get_68_VertexControl_RootArea;
                xamlMember.Setter = set_68_VertexControl_RootArea;
                break;
            case "GraphX.Controls.VertexControl.ShowLabel":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ShowLabel", "Boolean");
                xamlMember.Getter = get_69_VertexControl_ShowLabel;
                xamlMember.Setter = set_69_VertexControl_ShowLabel;
                break;
            case "METRO.SimpleGraph.DataVertex.LabelText":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataVertex");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelText", "String");
                xamlMember.Getter = get_70_DataVertex_LabelText;
                xamlMember.Setter = set_70_DataVertex_LabelText;
                break;
            case "METRO.SimpleGraph.DataVertex.VisualSelected":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataVertex");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualSelected", "Boolean");
                xamlMember.Getter = get_71_DataVertex_VisualSelected;
                xamlMember.Setter = set_71_DataVertex_VisualSelected;
                break;
            case "METRO.SimpleGraph.DataVertex.VisualDiameter":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataVertex");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualDiameter", "Int32");
                xamlMember.Getter = get_72_DataVertex_VisualDiameter;
                xamlMember.Setter = set_72_DataVertex_VisualDiameter;
                break;
            case "METRO.SimpleGraph.DataVertex.VisualInnerDiameter":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataVertex");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualInnerDiameter", "Int32");
                xamlMember.Getter = get_73_DataVertex_VisualInnerDiameter;
                xamlMember.Setter = set_73_DataVertex_VisualInnerDiameter;
                break;
            case "METRO.SimpleGraph.DataVertex.VisualOuterRingThickness":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("METRO.SimpleGraph.DataVertex");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "VisualOuterRingThickness", "Double");
                xamlMember.Getter = get_74_DataVertex_VisualOuterRingThickness;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.VertexBase.SkipProcessing":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.VertexBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "SkipProcessing", "GraphX.PCL.Common.Enums.ProcessingOptionEnum");
                xamlMember.Getter = get_75_VertexBase_SkipProcessing;
                xamlMember.Setter = set_75_VertexBase_SkipProcessing;
                break;
            case "GraphX.VertexBase.ID":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.VertexBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_76_VertexBase_ID;
                xamlMember.Setter = set_76_VertexBase_ID;
                break;
            case "GraphX.GraphAreaBase.AutoAssignMissingDataId":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "AutoAssignMissingDataId", "Boolean");
                xamlMember.Getter = get_77_GraphAreaBase_AutoAssignMissingDataId;
                xamlMember.Setter = set_77_GraphAreaBase_AutoAssignMissingDataId;
                break;
            case "GraphX.GraphAreaBase.ExternalSettings":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ExternalSettings", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_GraphAreaBase_ExternalSettings;
                xamlMember.Setter = set_78_GraphAreaBase_ExternalSettings;
                break;
            case "GraphX.GraphAreaBase.MoveAnimation":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "MoveAnimation", "GraphX.Animations.MoveAnimationBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_GraphAreaBase_MoveAnimation;
                xamlMember.Setter = set_79_GraphAreaBase_MoveAnimation;
                break;
            case "GraphX.GraphAreaBase.DeleteAnimation":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "DeleteAnimation", "GraphX.Models.Interfaces.IOneWayControlAnimation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_GraphAreaBase_DeleteAnimation;
                xamlMember.Setter = set_80_GraphAreaBase_DeleteAnimation;
                break;
            case "GraphX.GraphAreaBase.MouseOverAnimation":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "MouseOverAnimation", "GraphX.Models.Interfaces.IBidirectionalControlAnimation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_GraphAreaBase_MouseOverAnimation;
                xamlMember.Setter = set_81_GraphAreaBase_MouseOverAnimation;
                break;
            case "GraphX.GraphAreaBase.ContentSize":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ContentSize", "Windows.Foundation.Rect");
                xamlMember.Getter = get_82_GraphAreaBase_ContentSize;
                xamlMember.SetIsReadOnly();
                break;
            case "GraphX.GraphAreaBase.SideExpansionSize":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "SideExpansionSize", "Windows.Foundation.Size");
                xamlMember.Getter = get_83_GraphAreaBase_SideExpansionSize;
                xamlMember.Setter = set_83_GraphAreaBase_SideExpansionSize;
                break;
            case "GraphX.GraphAreaBase.FinalX":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "FinalX", "Double");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_84_GraphAreaBase_FinalX;
                xamlMember.Setter = set_84_GraphAreaBase_FinalX;
                break;
            case "GraphX.GraphAreaBase.FinalY":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.GraphAreaBase");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "FinalY", "Double");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_85_GraphAreaBase_FinalY;
                xamlMember.Setter = set_85_GraphAreaBase_FinalY;
                break;
            case "GraphX.Controls.EdgeLabelControl.Angle":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.EdgeLabelControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Angle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_EdgeLabelControl_Angle;
                xamlMember.Setter = set_86_EdgeLabelControl_Angle;
                break;
            case "GraphX.Controls.VertexLabelControl.LabelPositionMode":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexLabelControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelPositionMode", "GraphX.Controls.VertexLabelPositionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_VertexLabelControl_LabelPositionMode;
                xamlMember.Setter = set_87_VertexLabelControl_LabelPositionMode;
                break;
            case "GraphX.Controls.VertexLabelControl.LabelPositionSide":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexLabelControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelPositionSide", "GraphX.Controls.VertexLabelPositionSide");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_VertexLabelControl_LabelPositionSide;
                xamlMember.Setter = set_88_VertexLabelControl_LabelPositionSide;
                break;
            case "GraphX.Controls.VertexLabelControl.Angle":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexLabelControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Angle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_VertexLabelControl_Angle;
                xamlMember.Setter = set_89_VertexLabelControl_Angle;
                break;
            case "GraphX.Controls.VertexLabelControl.LabelPosition":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.VertexLabelControl");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "LabelPosition", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_VertexLabelControl_LabelPosition;
                xamlMember.Setter = set_90_VertexLabelControl_LabelPosition;
                break;
            case "GraphX.Converters.VisibilityToBoolConverter.Inverted":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Converters.VisibilityToBoolConverter");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Inverted", "Boolean");
                xamlMember.Getter = get_91_VisibilityToBoolConverter_Inverted;
                xamlMember.Setter = set_91_VisibilityToBoolConverter_Inverted;
                break;
            case "GraphX.Converters.VisibilityToBoolConverter.Not":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Converters.VisibilityToBoolConverter");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "Not", "Boolean");
                xamlMember.Getter = get_92_VisibilityToBoolConverter_Not;
                xamlMember.Setter = set_92_VisibilityToBoolConverter_Not;
                break;
            case "GraphX.Controls.Zoom.ZCP.ContentSize":
                userType = (global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GraphX.Controls.Zoom.ZCP");
                xamlMember = new global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlMember(this, "ContentSize", "Windows.Foundation.Size");
                xamlMember.Getter = get_93_ZCP_ContentSize;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlSystemBaseType
    {
        global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::METRO.SimpleGraph.METRO_SimpleGraph_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


